{"version":3,"sources":["./src/app/@modules/@developer-guide/pages/any/any.component.html","./src/app/@modules/@developer-guide/pages/forms/forms.component.html","./src/app/@modules/@developer-guide/pages/url-queries/url-queries.component.html","./src/app/@modules/@developer-guide/@developer-guide-routing.module.ts","./src/app/@modules/@developer-guide/@developer-guide.module.ts","./src/app/@modules/@developer-guide/pages/any/any.component.sass","./src/app/@modules/@developer-guide/pages/any/any.component.ts","./src/app/@modules/@developer-guide/pages/forms/forms.component.sass","./src/app/@modules/@developer-guide/pages/forms/forms.component.ts","./src/app/@modules/@developer-guide/pages/forms/individual-example-state.ts","./src/app/@modules/@developer-guide/pages/url-queries/url-queries.component.sass","./src/app/@modules/@developer-guide/pages/url-queries/url-queries.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sC;;;;;;;;;;;ACAA,4sDAA4sD,oCAAoC,s9G;;;;;;;;;;;ACAhvD,2EAA2E,yDAAyD,iBAAiB,sBAAsB,yDAAyD,gBAAgB,uBAAuB,4DAA4D,mD;;;;;;;;;;;;;;;;;;;;;ACA9R;AACc;AAEvD,QAAQ;AACuD;AACgB;AACvB;AAGxD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4FAAmB,EAAE;IACvD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,qEAAY,EAAE;CACzC,CAAC;AAMF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAJvC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBC;AACM;AAEiC;AACjB;AACG;AACgC;AAElG,2IAA2I;AAChC;AAC3B;AACxB;AAgBxD;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAbhC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2EAAc,EAAE,4FAAmB,EAAE,qEAAY;aAE/D;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,2FAA2B;gBAC3B,0DAAW;gBACX,kEAAmB;gBACnB,gHAAwB;aACzB;YACD,SAAS,EAAE,CAAC,wGAAgB,CAAC;SAC9B,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;AC3BjC,+DAA+D,+K;;;;;;;;;;;;;;;;;ACAb;AAYlD;IAEE;IAAgB,CAAC;IAEjB,+BAAQ,GAAR;IACA,CAAC;IALU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,2KAAmC;;SAEpC,CAAC;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;ACZzB,0BAA0B,oBAAoB,qBAAqB,GAAG,6CAA6C,mrB;;;;;;;;;;;;;;;;;;;;;;ACAjE;AACe;AACyD;AAC1H,2DAA2D;AACR;AACqD;AACpC,CAAC,mBAAmB;AAOxF;IAKE,wBACU,WAAwB,EACxB,KAAqB,EACrB,SAA2B;IACnC,0BAA0B;;QAHlB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAkB;QALrC,OAAE,GAAG,gFAAsB,CAAC;QAS1B,IAAM,aAAa,GAAkB;YACnC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SAEzB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;YAC7G,4GAA4G;YAC5G,8DAA8D;YAC9D,sDAAsD;YACtD,kEAAkE;YAClE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAClC,KAAK,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC;gBAC1B,SAAS,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC;aAC/B,EAAE;gBACC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,CAAC;aACvE,CAAC;SACL,CAAC,CAAC;IACL,CAAC;IAGD,iCAAQ,GAAR;QACE,cAAc;QACd,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;QAE1C,UAAU;QACV,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACnD,6DAAG,CAAC,IAAI,CAAC;QAET,UAAU;QACV,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,qDAAG,CAAC,CAAC;IACxC,CAAC;IAED,gCAAO,GAAP;QACE,IAAM,QAAQ,GAAG;YACf,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YACzC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;YAC9D,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK;SACnE;QACD,6DAAG,CAAC,GAAG,EAAE,QAAQ,CAAC;QAClB,6DAAG,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;QACvB,6DAAG,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC,wFAAwF;QAC1I,6DAAG,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,sCAAsC;IAC3G,CAAC;IAED,sBAAI,iCAAK;aAAT,cAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClD,sBAAI,qCAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,+BAAG;aAAP,cAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAI,mCAAO;aAAX,cAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;;;OAAA;;gBAxDzC,0DAAW;gBACjB,8DAAc;gBACV,wGAAgB;;IAR1B,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,iLAAqC;;SAEtC,CAAC;OACW,cAAc,CAgE1B;IAAD,qBAAC;CAAA;AAhE0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA,IAAI,sBAAsB,GAA2B;IACjD,IAAI,EAAE;QACF,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,EAAE;QACb,QAAQ,EAAE,EAAE;QACZ,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,IAAI;KACd;IACD,KAAK,EAAE;QACH,OAAO;QACP,OAAO;QACP,OAAO;QACP,UAAU;KACb;CACJ,CAAC;AAEgC;;;;;;;;;;;;AC3BlC,+DAA+D,uM;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACiB;AAGlE,yBAAyB;AACzB,IAAM,OAAO,GAAQ,uEAAa,EAAE;AACpC,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO;AAYlD;IAEE,6BACU,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAC3B,CAAC;IAEL,sCAAQ,GAAR;QACE,IAAI;QACJ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACnD,6DAAG,CAAC,IAAI,CAAC;QAET,IAAI;QACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,qDAAG,CAAC,CAAC;IACxC,CAAC;;gBAVgB,8DAAc;;IAHpB,mBAAmB;QAV/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mMAA2C;;SAO5C,CAAC;OACW,mBAAmB,CAe/B;IAAD,0BAAC;CAAA;AAf+B","file":"modules-developer-guide-developer-guide-module-es5.js","sourcesContent":["module.exports = \"<p>any works!</p>\\n\"","module.exports = \"<div class=\\\"jumbotron limit\\\">\\n\\n    <h3 class=\\\"title\\\">Registration</h3>\\n  \\n    <!-- Register Form -->\\n    <form [formGroup]=\\\"userForm\\\">\\n  \\n      <!-- email -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"1\\\">Email address</label>\\n        <input formControlName=\\\"email\\\" id=\\\"1\\\" class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n        <small class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n        <!-- validation -->\\n        <app-form-validator [it]=\\\"email\\\"></app-form-validator>\\n      </div>\\n  \\n      <!-- both -->\\n      <fieldset formGroupName=\\\"passwords\\\">\\n  \\n        <!-- password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"2\\\">Password</label>\\n          <input formControlName=\\\"pwd\\\" id=\\\"2\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\">\\n          <!-- validation -->\\n          <app-form-validator [it]=\\\"pwd\\\"></app-form-validator>\\n        </div>\\n  \\n        <!-- confirm password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"3\\\">Password confirmation</label>\\n          <input formControlName=\\\"confirm\\\" id=\\\"3\\\" class=\\\"form-control input-lg\\\" type=\\\"password\\\"\\n            placeholder=\\\"Confirm Password\\\">\\n          <small class=\\\"form-text text-muted\\\">Password must be at 6 to 20 characters long.</small>\\n          <!-- validation -->\\n          <app-form-validator [it]=\\\"confirm\\\"></app-form-validator>\\n        </div>\\n  \\n        <!-- mix validation: confirm, passwords -->\\n        <!-- equal -->\\n        <div *ngIf=\\\" !confirm.pristine && passwords.errors && passwords.errors.itemsAreEqual\\\" class=\\\"alert alert-danger\\\">\\n          {{passwords.errors.itemsAreEqual.msg}}\\n        </div>\\n  \\n      </fieldset>\\n  \\n      <div class=\\\"form-group\\\">\\n        <i class=\\\"mdi mdi-file-document-box-check\\\"></i>\\n        <a class=\\\"alert-link\\\" href=\\\"\\\"> Conditions Document</a>\\n      </div>\\n  \\n      <div class=\\\"form-group \\\">\\n        <div class=\\\"custom-control custom-checkbox\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\" checked=\\\"\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">I agree with conditions</label>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </form>\\n  \\n  </div>\\n  \\n\\n\\n  <!-- text -->\\n  <div class=\\\"limit\\\">\\n    <p class=\\\"lead\\\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured\\n      content or information.</p>\\n    <hr class=\\\"my-4\\\">\\n    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\\n  </div>\\n\\n\\n\\n<!-- other fields -->\\n<div class=\\\"jumbotron limit\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <fieldset disabled=\\\"\\\">\\n      <label class=\\\"control-label\\\" for=\\\"disabledInput\\\">Disabled input</label>\\n      <input class=\\\"form-control\\\" id=\\\"disabledInput\\\" type=\\\"text\\\" placeholder=\\\"Disabled input here...\\\" disabled=\\\"\\\">\\n    </fieldset>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <fieldset>\\n      <label class=\\\"control-label\\\" for=\\\"readOnlyInput\\\">Readonly input</label>\\n      <input class=\\\"form-control\\\" id=\\\"readOnlyInput\\\" type=\\\"text\\\" placeholder=\\\"Readonly input hereâ€¦\\\" readonly=\\\"\\\">\\n    </fieldset>\\n  </div>\\n\\n  <div class=\\\"form-group has-success\\\">\\n    <label class=\\\"form-control-label\\\" for=\\\"inputSuccess1\\\">Valid input</label>\\n    <input type=\\\"text\\\" value=\\\"correct value\\\" class=\\\"form-control is-valid\\\" id=\\\"inputValid\\\">\\n    <div class=\\\"valid-feedback\\\">Success! You've done it.</div>\\n  </div>\\n\\n  <div class=\\\"form-group has-danger\\\">\\n    <label class=\\\"form-control-label\\\" for=\\\"inputDanger1\\\">Invalid input</label>\\n    <input type=\\\"text\\\" value=\\\"wrong value\\\" class=\\\"form-control is-invalid\\\" id=\\\"inputInvalid\\\">\\n    <div class=\\\"invalid-feedback\\\">Sorry, that username's taken. Try another?</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label col-form-label-lg\\\" for=\\\"inputLarge\\\">Large input</label>\\n    <input class=\\\"form-control form-control-lg\\\" type=\\\"text\\\" placeholder=\\\".form-control-lg\\\" id=\\\"inputLarge\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">Default input</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Default input\\\" id=\\\"inputDefault\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Small input</label>\\n    <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" placeholder=\\\".form-control-sm\\\" id=\\\"inputSmall\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\">Input addons</label>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">$</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest dollar)\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <span class=\\\"input-group-text\\\">.00</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \"<h1>Exaples: working with Queries</h1>\\n\\nMode:\\n\\n&nbsp; <a [routerLink]=\\\"['/auth/register']\\\" [queryParams]=\\\"{ mode: 'default'}\\\">Default</a>\\n&nbsp; <a [routerLink]=\\\"['/auth/register']\\\" [queryParams]=\\\"{ mode: 'custom'}\\\">Custom</a>\\n\\n&nbsp; <a href=\\\"/auth/register?mode=default\\\">Default</a>\\n&nbsp; <a href=\\\"/auth/register?mode=custom\\\">Custom</a>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// pages\nimport { FormsComponent } from './pages/forms/forms.component';\nimport { UrlQueriesComponent } from './pages/url-queries/url-queries.component'\nimport { AnyComponent } from './pages/any/any.component'\n\n\nconst routes: Routes = [\n  { path: 'forms', component: FormsComponent },\n  { path: 'url-queries', component: UrlQueriesComponent },\n  { path: 'any', component: AnyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DeveloperGuideRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeveloperGuideRoutingModule } from './@developer-guide-routing.module';\nimport { FormsComponent } from './pages/forms/forms.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ValidatorService } from '../../@modules/@common-dependencies/services/validator.service';\n\n// import { FormValidatorComponent } from '../../@modules/@common-dependencies/components/general/form-validator/form-validator.component';\nimport { CommonDependenciesModule } from '../../@modules/@common-dependencies/@common-dependencies.module';\nimport { UrlQueriesComponent } from './pages/url-queries/url-queries.component';\nimport { AnyComponent } from './pages/any/any.component'\n\n\n@NgModule({\n  declarations: [FormsComponent, UrlQueriesComponent, AnyComponent, \n    // FormValidatorComponent // no!\n  ],\n  imports: [\n    CommonModule,\n    DeveloperGuideRoutingModule,\n    FormsModule, \n    ReactiveFormsModule,\n    CommonDependenciesModule\n  ],\n  providers: [ValidatorService]\n})\nexport class DeveloperGuideModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Btb2R1bGVzL0BkZXZlbG9wZXItZ3VpZGUvcGFnZXMvYW55L2FueS5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n// declarations\ndeclare var require: any;\ndeclare function _require(name: string): any;\n\n\n@Component({\n  selector: 'app-any',\n  templateUrl: './any.component.html',\n  styleUrls: ['./any.component.sass']\n})\nexport class AnyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".limit {\\n  max-width: 30em;\\n  margin: 3em auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQG1vZHVsZXMvQGRldmVsb3Blci1ndWlkZS9wYWdlcy9mb3Jtcy9EOlxccHJvamVjdHMyXFxDaHVnYXlzdGVyXFxmcm9udC9zcmNcXGFwcFxcQG1vZHVsZXNcXEBkZXZlbG9wZXItZ3VpZGVcXHBhZ2VzXFxmb3Jtc1xcZm9ybXMuY29tcG9uZW50LnNhc3MiLCJzcmMvYXBwL0Btb2R1bGVzL0BkZXZlbG9wZXItZ3VpZGUvcGFnZXMvZm9ybXMvZm9ybXMuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL0Btb2R1bGVzL0BkZXZlbG9wZXItZ3VpZGUvcGFnZXMvZm9ybXMvZm9ybXMuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGltaXRcclxuICAgIG1heC13aWR0aDogMzBlbVxyXG4gICAgbWFyZ2luOiAzZW0gYXV0byIsIi5saW1pdCB7XG4gIG1heC13aWR0aDogMzBlbTtcbiAgbWFyZ2luOiAzZW0gYXV0bztcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl, ValidatorFn, FormArray } from '@angular/forms';\n// import { ApiService } from '../../services/api.service';\nimport { log } from '../../../../my_modules/stuff';\nimport { ValidatorService } from '../../../../@modules/@common-dependencies/services/validator.service';\nimport { individualExampleState } from './individual-example-state'; // individual state\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.sass']\n})\nexport class FormsComponent implements OnInit {\n\n  userForm: any; //FormGroup;\n  st = individualExampleState;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private validator: ValidatorService\n    // private api: ApiService\n  ) {\n\n    const pwdValidators: ValidatorFn[] = [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(20),\n      // this.someCustom()\n    ];\n\n    this.userForm = this.formBuilder.group({\n      'email': [this.st.user.email, [Validators.required, Validators.minLength(5), this.validator.mailValidator()]],\n      // 'firstName': [this.st.user.firstName, [Validators.required, Validators.minLength(3), this.someCustom()]],\n      // 'lastName': [this.st.user.lastName, [Validators.required]],\n      // 'role': [this.user.st.role, [Validators.required]],\n      // 'notes': [this.user.st.notes, [Validators.maxLength(45)]]      \n      'passwords': this.formBuilder.group({\n        'pwd': ['', pwdValidators],\n        'confirm': ['', pwdValidators]\n      }, {\n          validator: this.validator.itemsAreEqual('Passwords', 'pwd', 'confirm')\n        })\n    });\n  }\n\n\n  ngOnInit() {\n    // example !!!\n    setInterval(this.logForm.bind(this), 2000)\n\n    // example\n    let mode = this.route.snapshot.queryParams[\"mode\"];\n    log(mode)\n\n    // example\n    this.route.queryParams.subscribe(log);\n  }\n\n  logForm() {\n    const userData = {\n      email: this.userForm.controls.email.value,\n      password1: this.userForm.controls.passwords.controls.pwd.value,\n      password2: this.userForm.controls.passwords.controls.confirm.value\n    }\n    log('0', userData)\n    log('0', this.userForm)\n    log('1', this.userForm.controls.passwords.errors) // .................... 'it'.errors -> {itemsAreEqual: msg: {\"Passwords are not equal\"}}\n    log('3', this.userForm.controls.passwords.controls.confirm.errors) // ... 'it'.errors -> {minlength: {â€¦}}\n  }\n\n  get email() { return this.userForm.get('email'); }\n  get passwords() { return this.userForm.get('passwords'); }\n  get pwd() { return this.userForm.get('passwords.pwd'); }\n  get confirm() { return this.userForm.get('passwords.confirm'); }\n\n}\n\n\n","import { User } from '../../../@common-dependencies/interfaces/user';\r\n\r\ninterface IndividualExampleState {\r\n    user: User;\r\n    roles: Array<string> // <----------------- not yet implemented !!!\r\n}\r\n\r\nvar individualExampleState: IndividualExampleState = {\r\n    user: {\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        password1: '',\r\n        password2: '',\r\n        role: 'Guest',\r\n        notes: null\r\n    },\r\n    roles: [ // <----------------- not yet implemented !!!\r\n        'Guest',\r\n        'Admin',\r\n        'Owner',\r\n        'Operator'\r\n    ]\r\n};\r\n\r\nexport { individualExampleState };\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0Btb2R1bGVzL0BkZXZlbG9wZXItZ3VpZGUvcGFnZXMvdXJsLXF1ZXJpZXMvdXJsLXF1ZXJpZXMuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { log, getUrlQueries } from '../../../../my_modules/stuff';\ndeclare var require: any;\n\n// change component mode \nconst queries: any = getUrlQueries()\nconst mode = queries.mode ? queries.mode : 'empty'\n\n@Component({\n  selector: 'app-url-queries',\n  templateUrl: './url-queries.component.html',\n  styleUrls: [\n    // mode == 'custom'\n    // ? require('./url-queries.component-alternative.sass') // <---| not works for (ng build -prod)\n    // : require('./url-queries.component.sass') // <---------------| can be used for (ng build): just for stage of development\n    './url-queries.component.sass'\n  ]\n})\nexport class UrlQueriesComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    // 1\n    let mode = this.route.snapshot.queryParams[\"mode\"];\n    log(mode)\n\n    // 2\n    this.route.queryParams.subscribe(log);\n  }\n\n}\n"],"sourceRoot":""}