{"version":3,"sources":["webpack:///src/app/@modules/@developer-guide/@developer-guide-routing.module.ts","webpack:///src/app/@modules/@developer-guide/@developer-guide.module.ts","webpack:///src/app/@modules/@developer-guide/pages/any/any.component.ts","webpack:///src/app/@modules/@developer-guide/pages/any/any.component.html","webpack:///src/app/@modules/@developer-guide/pages/forms/forms.component.ts","webpack:///src/app/@modules/@developer-guide/pages/forms/forms.component.html","webpack:///src/app/@modules/@developer-guide/pages/forms/individual-example-state.ts","webpack:///src/app/@modules/@developer-guide/pages/url-queries/url-queries.component.ts","webpack:///src/app/@modules/@developer-guide/pages/url-queries/url-queries.component.html"],"names":["routes","path","component","DeveloperGuideRoutingModule","forChild","imports","exports","DeveloperGuideModule","declarations","providers","AnyComponent","selector","templateUrl","styleUrls","FormsComponent","formBuilder","route","validator","st","pwdValidators","required","minLength","maxLength","userForm","group","user","email","mailValidator","itemsAreEqual","setInterval","logForm","bind","mode","snapshot","queryParams","subscribe","userData","controls","value","password1","passwords","pwd","password2","confirm","errors","get","individualExampleState","username","firstName","lastName","password","role","notes","roles","queries","UrlQueriesComponent"],"mappings":"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","file":"modules-developer-guide-developer-guide-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// pages\nimport { FormsComponent } from './pages/forms/forms.component';\nimport { UrlQueriesComponent } from './pages/url-queries/url-queries.component'\nimport { AnyComponent } from './pages/any/any.component'\n\n\nconst routes: Routes = [\n  { path: 'forms', component: FormsComponent },\n  { path: 'url-queries', component: UrlQueriesComponent },\n  { path: 'any', component: AnyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DeveloperGuideRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeveloperGuideRoutingModule } from './@developer-guide-routing.module';\nimport { FormsComponent } from './pages/forms/forms.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ValidatorService } from '../../@modules/@common-dependencies/services/validator.service';\n\n// import { FormValidatorComponent } from '../../@modules/@common-dependencies/components/general/form-validator/form-validator.component';\nimport { CommonDependenciesModule } from '../../@modules/@common-dependencies/@common-dependencies.module';\nimport { UrlQueriesComponent } from './pages/url-queries/url-queries.component';\nimport { AnyComponent } from './pages/any/any.component'\n\n\n@NgModule({\n  declarations: [FormsComponent, UrlQueriesComponent, AnyComponent, \n    // FormValidatorComponent // no!\n  ],\n  imports: [\n    CommonModule,\n    DeveloperGuideRoutingModule,\n    FormsModule, \n    ReactiveFormsModule,\n    CommonDependenciesModule\n  ],\n  providers: [ValidatorService]\n})\nexport class DeveloperGuideModule { }\n","import { Component, OnInit } from '@angular/core';\n\n// declarations\ndeclare var require: any;\ndeclare function _require(name: string): any;\n\n\n@Component({\n  selector: 'app-any',\n  templateUrl: './any.component.html',\n  styleUrls: ['./any.component.sass']\n})\nexport class AnyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>any works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl, ValidatorFn, FormArray } from '@angular/forms';\n// import { ApiService } from '../../services/api.service';\nimport { log } from '../../../../my_modules/stuff';\nimport { ValidatorService } from '../../../../@modules/@common-dependencies/services/validator.service';\nimport { individualExampleState } from './individual-example-state'; // individual state\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.sass']\n})\nexport class FormsComponent implements OnInit {\n\n  userForm: any; //FormGroup;\n  st = individualExampleState;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private validator: ValidatorService\n    // private api: ApiService\n  ) {\n\n    const pwdValidators: ValidatorFn[] = [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(20),\n      // this.someCustom()\n    ];\n\n    this.userForm = this.formBuilder.group({\n      'email': [this.st.user.email, [Validators.required, Validators.minLength(5), this.validator.mailValidator()]],\n      // 'firstName': [this.st.user.firstName, [Validators.required, Validators.minLength(3), this.someCustom()]],\n      // 'lastName': [this.st.user.lastName, [Validators.required]],\n      // 'role': [this.user.st.role, [Validators.required]],\n      // 'notes': [this.user.st.notes, [Validators.maxLength(45)]]      \n      'passwords': this.formBuilder.group({\n        'pwd': ['', pwdValidators],\n        'confirm': ['', pwdValidators]\n      }, {\n          validator: this.validator.itemsAreEqual('Passwords', 'pwd', 'confirm')\n        })\n    });\n  }\n\n\n  ngOnInit() {\n    // example !!!\n    setInterval(this.logForm.bind(this), 2000)\n\n    // example\n    let mode = this.route.snapshot.queryParams[\"mode\"];\n    log(mode)\n\n    // example\n    this.route.queryParams.subscribe(log);\n  }\n\n  logForm() {\n    const userData = {\n      email: this.userForm.controls.email.value,\n      password1: this.userForm.controls.passwords.controls.pwd.value,\n      password2: this.userForm.controls.passwords.controls.confirm.value\n    }\n    log('0', userData)\n    log('0', this.userForm)\n    log('1', this.userForm.controls.passwords.errors) // .................... 'it'.errors -> {itemsAreEqual: msg: {\"Passwords are not equal\"}}\n    log('3', this.userForm.controls.passwords.controls.confirm.errors) // ... 'it'.errors -> {minlength: {…}}\n  }\n\n  get email() { return this.userForm.get('email'); }\n  get passwords() { return this.userForm.get('passwords'); }\n  get pwd() { return this.userForm.get('passwords.pwd'); }\n  get confirm() { return this.userForm.get('passwords.confirm'); }\n\n}\n\n\n","<div class=\"jumbotron limit\">\n\n    <h3 class=\"title\">Registration</h3>\n  \n    <!-- Register Form -->\n    <form [formGroup]=\"userForm\">\n  \n      <!-- email -->\n      <div class=\"form-group\">\n        <label for=\"1\">Email address</label>\n        <input formControlName=\"email\" id=\"1\" class=\"form-control\" type=\"email\" placeholder=\"Enter email\">\n        <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        <!-- validation -->\n        <app-form-validator [it]=\"email\"></app-form-validator>\n      </div>\n  \n      <!-- both -->\n      <fieldset formGroupName=\"passwords\">\n  \n        <!-- password -->\n        <div class=\"form-group\">\n          <label for=\"2\">Password</label>\n          <input formControlName=\"pwd\" id=\"2\" class=\"form-control\" type=\"password\" placeholder=\"Password\">\n          <!-- validation -->\n          <app-form-validator [it]=\"pwd\"></app-form-validator>\n        </div>\n  \n        <!-- confirm password -->\n        <div class=\"form-group\">\n          <label for=\"3\">Password confirmation</label>\n          <input formControlName=\"confirm\" id=\"3\" class=\"form-control input-lg\" type=\"password\"\n            placeholder=\"Confirm Password\">\n          <small class=\"form-text text-muted\">Password must be at 6 to 20 characters long.</small>\n          <!-- validation -->\n          <app-form-validator [it]=\"confirm\"></app-form-validator>\n        </div>\n  \n        <!-- mix validation: confirm, passwords -->\n        <!-- equal -->\n        <div *ngIf=\" !confirm.pristine && passwords.errors && passwords.errors.itemsAreEqual\" class=\"alert alert-danger\">\n          {{passwords.errors.itemsAreEqual.msg}}\n        </div>\n  \n      </fieldset>\n  \n      <div class=\"form-group\">\n        <i class=\"mdi mdi-file-document-box-check\"></i>\n        <a class=\"alert-link\" href=\"\"> Conditions Document</a>\n      </div>\n  \n      <div class=\"form-group \">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked=\"\">\n          <label class=\"custom-control-label\" for=\"customCheck1\">I agree with conditions</label>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  \n  </div>\n  \n\n\n  <!-- text -->\n  <div class=\"limit\">\n    <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured\n      content or information.</p>\n    <hr class=\"my-4\">\n    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n  </div>\n\n\n\n<!-- other fields -->\n<div class=\"jumbotron limit\">\n\n  <div class=\"form-group\">\n    <fieldset disabled=\"\">\n      <label class=\"control-label\" for=\"disabledInput\">Disabled input</label>\n      <input class=\"form-control\" id=\"disabledInput\" type=\"text\" placeholder=\"Disabled input here...\" disabled=\"\">\n    </fieldset>\n  </div>\n\n  <div class=\"form-group\">\n    <fieldset>\n      <label class=\"control-label\" for=\"readOnlyInput\">Readonly input</label>\n      <input class=\"form-control\" id=\"readOnlyInput\" type=\"text\" placeholder=\"Readonly input here…\" readonly=\"\">\n    </fieldset>\n  </div>\n\n  <div class=\"form-group has-success\">\n    <label class=\"form-control-label\" for=\"inputSuccess1\">Valid input</label>\n    <input type=\"text\" value=\"correct value\" class=\"form-control is-valid\" id=\"inputValid\">\n    <div class=\"valid-feedback\">Success! You've done it.</div>\n  </div>\n\n  <div class=\"form-group has-danger\">\n    <label class=\"form-control-label\" for=\"inputDanger1\">Invalid input</label>\n    <input type=\"text\" value=\"wrong value\" class=\"form-control is-invalid\" id=\"inputInvalid\">\n    <div class=\"invalid-feedback\">Sorry, that username's taken. Try another?</div>\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-form-label col-form-label-lg\" for=\"inputLarge\">Large input</label>\n    <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\".form-control-lg\" id=\"inputLarge\">\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-form-label\" for=\"inputDefault\">Default input</label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Default input\" id=\"inputDefault\">\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"col-form-label col-form-label-sm\" for=\"inputSmall\">Small input</label>\n    <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\".form-control-sm\" id=\"inputSmall\">\n  </div>\n\n  <div class=\"form-group\">\n    <label class=\"control-label\">Input addons</label>\n    <div class=\"form-group\">\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">$</span>\n        </div>\n        <input type=\"text\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\">\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text\">.00</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>","import { User } from '../../../@common-dependencies/interfaces/user';\n\ninterface IndividualExampleState {\n    user: User;\n    roles: Array<string> // <----------------- not yet implemented !!!\n}\n\nvar individualExampleState: IndividualExampleState = {\n    user: {\n        username: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        password1: '',\n        password2: '',\n        role: 'Guest',\n        notes: null\n    },\n    roles: [ // <----------------- not yet implemented !!!\n        'Guest',\n        'Admin',\n        'Owner',\n        'Operator'\n    ]\n};\n\nexport { individualExampleState };\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { log, getUrlQueries } from '../../../../my_modules/stuff';\ndeclare var require: any;\n\n// change component mode \nconst queries: any = getUrlQueries()\nconst mode = queries.mode ? queries.mode : 'empty'\n\n@Component({\n  selector: 'app-url-queries',\n  templateUrl: './url-queries.component.html',\n  styleUrls: [\n    // mode == 'custom'\n    // ? require('./url-queries.component-alternative.sass') // <---| not works for (ng build -prod)\n    // : require('./url-queries.component.sass') // <---------------| can be used for (ng build): just for stage of development\n    './url-queries.component.sass'\n  ]\n})\nexport class UrlQueriesComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    // 1\n    let mode = this.route.snapshot.queryParams[\"mode\"];\n    log(mode)\n\n    // 2\n    this.route.queryParams.subscribe(log);\n  }\n\n}\n","<h1>Exaples: working with Queries</h1>\n\nMode:\n\n&nbsp; <a [routerLink]=\"['/auth/register']\" [queryParams]=\"{ mode: 'default'}\">Default</a>\n&nbsp; <a [routerLink]=\"['/auth/register']\" [queryParams]=\"{ mode: 'custom'}\">Custom</a>\n\n&nbsp; <a href=\"/auth/register?mode=default\">Default</a>\n&nbsp; <a href=\"/auth/register?mode=custom\">Custom</a>"]}